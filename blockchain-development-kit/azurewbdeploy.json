{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Resource group location for current deployment"
            }
        },
        "pocName": {
            "type": "string",
            "maxLength": 16,
            "metadata": {
                "description": "A short identifier to distinguish machines in this membership"
            }
        },
        "authType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authorization type for SSH access to VMs"
            }
        },
        "username": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Administrator password for each deployed VM"
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "ssh public key for connecting to VMs."
            }
        },
        "AADBlockchainClientAppRegistrationApplicationId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "AAD ID of service principal."
            }
        },
        "AADTenantDomainName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of AAD tenant containing the service principal."
            }
        },
        "workerTag": {
            "type": "string",
            "defaultValue": ""
        },
        "sendToServiceOwners": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Send alert email to all the service owners"
            }
        },
        "customEmails": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Custom emails to send alerts to"
            }
        },
        "databasePassword": {
            "type": "securestring",
            "metadata": {
                "description": ""
            }
        },
        "deploymentGeolocation": {
            "type": "string",
            "defaultValue": "eastus",
            "metadata": {
                "description": "Geolocation for Workbench resouces"
            },
            "allowedValues": [
                "eastus",
                "southeastasia",
                "westeurope"
            ]
        },
        "websiteOverride": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": ""
            }
        },
        "numVLNodesRegion": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of load balanced validator nodes"
            },
            "allowedValues": [
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
            ],
            "minValue": 2,
            "maxValue": 15
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Size of the virtual machine for transaction nodes"
            }
        },
        "vmStorageAccountType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "StandardSSD_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Type of managed disks to create"
            }
        },
        "blockchainRPC": {
            "type": "string",
            "defaultValue": ""
        },
        "omsDeploy": {
            "type": "bool",
            "defaultValue": true
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "description": "The base URL for dependent assets",
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://gallery.azure.com/artifact/20151001/microsoft-azure-blockchain.azure-blockchain-workbenchazure-blockchain-workbench.1.0.14/Artifacts"
        }
    },
    "variables": {
        "workbenchWithPoAGuid": "pid-9c2e38a6-1efb-4f31-9027-b8aa8d197573",
        "workbenchBYOEGuid": "pid-ac8867a2-949c-41c4-8494-4306b8d99e26",
        "deploymentGuid": "[if(empty(parameters('blockchainRPC')), variables('workbenchWithPoAGuid'), variables('workbenchBYOEGuid'))]",
        "consortiumName": "[parameters('pocName')]",
        "consortiumMember": "[concat(variables('consortiumName'), '-M1')]",
        "appBuilderTemplate": "[concat(variables('consortiumMember'), '-appBuilder')]",
        "dockerRepository": "blockchainworkbenchprod.azurecr.io",
        "dockerLogin": "298cb6f5-f73a-45dc-83a7-16cfd5fe7461",
        "dockerPasswd": "IrMOjS00aLqRCvvk/kc1WURAMX44ALvCvn+duLyog2A=",
        "dockerImageTag": "1.6.2",
        "deploymentRegion": "[parameters('deploymentGeolocation')]"
    },
    "resources": [
        {
            "apiVersion": "2018-08-01",
            "name": "[variables('deploymentGuid')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "condition": "[empty(parameters('blockchainRPC'))]",
            "apiVersion": "2018-08-01",
            "name": "Blockchain",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/ledger/ledgerTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('deploymentRegion')]"
                    },
                    "isJoiningExistingNetwork": {
                        "value": false
                    },
                    "regionCount": {
                        "value": 1
                    },
                    "numVLNodesRegion": {
                        "value": "[parameters('numVLNodesRegion')]"
                    },
                    "location_1": {
                        "value": "[variables('deploymentRegion')]"
                    },
                    "authType": {
                        "value": "[parameters('authType')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('username')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminSSHKey": {
                        "value": "[parameters('sshPublicKey')]"
                    },
                    "ethereumNetworkID": {
                        "value": 10101010
                    },
                    "consortiumMemberId": {
                        "value": 0
                    },
                    "ethereumAdminPublicKey": {
                        "value": "0x0000000000000000000000000000000000000001"
                    },
                    "vlNodeVMSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vlStorageAccountType": {
                        "value": "[parameters('vmStorageAccountType')]"
                    },
                    "omsDeploy": {
                        "value": "[parameters('omsDeploy')]"
                    },
                    "omsLocation": {
                        "value": "[variables('deploymentRegion')]"
                    },
                    "deployUsingPublicIP": {
                        "value": false
                    },
                    "deployVnetGatewayForPrivateNetwork": {
                        "value": false
                    },
                    "baseUrl": {
                        "value": "[concat(parameters('baseUrl'), '/ledger')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[variables('appBuilderTemplate')]",
            "apiVersion": "2018-08-01",
            "properties": {
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('baseUrl'), '/deployAppBuilder.json')]"
                },
                "mode": "Incremental",
                "parameters": {
                    "location": {
                        "value": "[variables('deploymentRegion')]"
                    },
                    "pocName": {
                        "value": "[parameters('pocName')]"
                    },
                    "username": {
                        "value": "[parameters('username')]"
                    },
                    "authType": {
                        "value": "[parameters('authType')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "sshPublicKey": {
                        "value": "[parameters('sshPublicKey')]"
                    },
                    "AADBlockchainClientAppRegistrationApplicationId": {
                        "value": "[parameters('AADBlockchainClientAppRegistrationApplicationId')]"
                    },
                    "AADTenantDomainName": {
                        "value": "[parameters('AADTenantDomainName')]"
                    },
                    "workerVMSku": {
                        "value": "[parameters('vmSize')]"
                    },
                    "workerTag": {
                        "value": "[parameters('workerTag')]"
                    },
                    "dockerImageTag": {
                        "value": "[variables('dockerImageTag')]"
                    },
                    "sendToServiceOwners": {
                        "value": "[parameters('sendToServiceOwners')]"
                    },
                    "customEmails": {
                        "value": "[parameters('customEmails')]"
                    },
                    "databasePassword": {
                        "value": "[parameters('databasePassword')]"
                    },
                    "blockchainRPC": {
                        "value": "[if(empty(parameters('blockchainRPC')), reference('Blockchain').outputs.ethereum_rpc_endpoint.value, parameters('blockchainRPC'))]"
                    },
                    "blockchainVnetName": {
                        "value": "[if(empty(parameters('blockchainRPC')), reference('Blockchain').outputs.regionOneVnet.value, '')]"
                    },
                    "dockerRepository": {
                        "value": "[variables('dockerRepository')]"
                    },
                    "dockerLogin": {
                        "value": "[variables('dockerLogin')]"
                    },
                    "dockerPasswd": {
                        "value": "[variables('dockerPasswd')]"
                    },
                    "websiteOverride": {
                        "value": "[parameters('websiteOverride')]"
                    },
                    "baseUrl": {
                        "value": "[parameters('baseUrl')]"
                    }
                }
            },
            "dependsOn": [
                "Blockchain"
            ]
        }
    ],
    "outputs": {
        "apiURL": {
            "type": "string",
            "value": "[reference(variables('appBuilderTemplate')).outputs.gatewayApiUrl.value]"
        },
        "websiteURL": {
            "type": "string",
            "value": "[reference(variables('appBuilderTemplate')).outputs.websiteUiUrl.value]"
        }
    }
}